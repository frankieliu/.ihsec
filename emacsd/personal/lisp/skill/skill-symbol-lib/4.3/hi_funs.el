(put 'hi_funs 'symbol-type "human interface fun")
(setq hi_funs '(
("hiAbsolutePan" "[w_window] [n_xPercent] [n_yPercent]" "Scroll a window in any direction by specifying the amount to pan as a percentage of the window size.")
("hiActivateBatch" "x_childId" "Switches a child process to batch mode.")
("hiActivateMessages" "x_childId" "Switches a child process to interactive mode. In interactive mode, output from the child is written to a log file and is passed on to the parent process.")
("hiAddCyclicChoice" "r_form s_cyclicField g_newChoice" "Adds a new choice to the end of the list of choices in a cyclic field.")
("hiAddField" "r_form g_fieldDescription" "Adds one field to a form.")
("hiAddFields" "r_form l_fieldDescriptions" "Adds one or more fields to a form.")
("hiAddFixedMenu" "[?window w_window] ?fixedMenu r_fixMenu [?menuSide s_menuSide]" "Adds or replaces a fixed menu on a window.")
("hiAddMenuItem" "r_hiMenu r_menuItem" "Adds a menu item to the end of all instances of a menu.")
("hiAddTextWordDelimiter" "w_windowId t_delimiters" "Adds characters to the word delimiter list for the window.")
("hiAppendInputCmd" "w_window t_cmd" "Appends a command to the input area of an encapsulation window.")
("hiBatchProcess" "t_command t_hostName t_logFile" "Invokes a UNIX process to execute batch commands.")
("hiBeginProcess" "t_command [t_hostName] [t_ioHandler] [t_errHandler] [t_postFunc] [t_logFile]" "Invokes a UNIX process to execute a command or sequence of commands.")
("hiChangeBannerLabel" "w_windowId t_bannerLabel x_labelPosition" "Overwrites or adds a banner label in a window.")
("hiChangeCyclicChoices" "r_form s_cyclicField l_newChoices" "Replaces the choices in a cyclic field with new choices.")
("hiChangeFormCallback" "r_form t_newFormAction" "Changes the doneAction of a form to the SKILL callback procedure newFormAction.")
("hiChangeFormTitle" "r_form t_newTitle" "Changes the window manager title of a form.")
("hiCloseChild" "x_cid" "Closes the input channel of the child process.")
("hiCloseWindow" "w_windowId" "Closes and deletes a window.")
("hiContChild" "x_childId" "Causes a suspended child process to resume executing. Equivalent to sending a CONT signal.")
("hiCreate2DMenu" "s_menuHandle t_menuName l_menuItems" "Creates and returns an internal data structure describing a two-dimensional menu object.")
("hiCreateAppForm" "?name s_name ?fields l_fieldEntries [?formTitle t_formTitle] [?callback g_callback][?unmapAfterCB g_unmapAfterCB] [?formType s_formType] [?dialogStyle s_dialogStyle] [?buttonLayout g_buttonLayout] [?help g_help] [?initialSize g_initialSize]" "Returns the SKILL representation of a form with the specified field entries and name.")
("hiCreateBBoxField" "?name s_fieldName [prompt t_fieldPrompt] ?value l_currentValue [?help t_fieldHelp] [?defValue l_defaultValue] [?font t_font] [?callback t_callback] [?editable g_editable]" "Creates a bounding box field for a form.")
("hiCreateBooleanButton" "?name s_fieldName ?buttonText t_buttonText ?callback t_callback ?value g_booleanValue [?defValue g_defaultValue] [?help t_fieldHelp] [?font t_font]" "Creates a single Boolean button for a form.")
("hiCreateButton" "?name s_fieldName ?buttonText t_buttonText ?callback t_callback [?buttonIcon l_buttonIcon] [?help t_fieldHelp] [?font t_font]" "Creates a standalone push button for a form or two-dimensional menu.")
("hiCreateButtonBoxField" "?name s_fieldName ?choices l_buttonText ?callback l_callbackList ?prompt t_fieldPrompt [?help t_fieldHelp] [?font t_font]" "Creates a button box field for a form.")
("hiCreateColorArray" "" "Returns a 27-element color array that can be used in a call to hiStringToIcon. The first 26 items correspond to the letters of the alphabet; the 27th item corresponds to .")
("hiCreateCyclicField" "?name s_fieldName ?choices l_enumerations ?prompt t_fieldPrompt ?value g_currentValue [?defValue g_defaultValue] [?callback t_callback] [?help t_fieldHelp] [?font t_font]" "Creates a cyclic field for a form.")
("hiCreateFloatField" "?name s_fieldName ?value f_currentValue [?prompt t_fieldPrompt] [?defValue f_defaultValue] [?help t_fieldHelp] [?font t_font] [?callback t_callback] [?range l_fieldRange] [?format t_fieldFormat] [?editable g_editable]" "Creates a float field for a form. A float field accepts only floating-point numbers as input.")
("hiCreateForm" "s_formHandle t_formName g_formAction l_fieldEntries t_formHelp [g_unmapAfterCB]" "Returns the SKILL representation of a form with the specified field entries and handle.")
("hiCreateFrameField" "?name s_fieldName [?labelText t_labelText]" "Creates a frame field for a two-dimensional form.")
("hiCreateHorizontalFixedMenu" "s_menuHandle l_menuItems x_rows x_cols" "Creates and returns an internal data structure describing a horizontal fixed menu object.")
("hiCreateIntField" "?name s_fieldName [?prompt t_fieldPrompt] ?value x_currentValue [?help t_fieldHelp] [?defValue x_defaultValue] [?font t_font] [?callback t_callback] [?format t_fieldFormat] [?range l_fieldRange] [?editable g_editable]" "Creates an integer field for a form.")
("hiCreateLabel" "?name s_fieldName ?labelText t_labelText [?justification s_justification] [?font t_font] [?help t_fieldHelp]" "Creates a standalone label entry for a form or two-dimensional menu.")
("hiCreateLayerCyclicField" "d_libId t_fieldPrompt t_callback l_layers [l_LPpair]" "Creates a cyclic field entry containing iconic representations of specified layers for a form.")
("hiCreateListBoxField" "?name s_fieldName [?prompt t_prompt] ?choices l_listItems [?value l_selectedItem] [?defValue l_defSelectedItem] [?callback t_callback] [?changeCB t_changeCB] [?numRows x_numRows] [?multipleSelect g_multipleSelect][?doubleClickCB t_doubleClickCB]" "Creates a list box field for a form.")
("hiCreateListField" "?name s_fieldName ?value l_currentValue [?help t_fieldHelp] [?prompt t_fieldPrompt] [?defValue l_defaultValue] [?font t_font] [?callback t_callback] [?editable g_editable]" "Creates a list field for a form.")
("hiCreateMenu" "s_menuHandle t_menuTitle l_menuItems" "Creates and returns the SKILL representation of a pop-up menu.")
("hiCreateMenuItem" "?name s_itemHandle ?itemText t_menuItemText [?itemIcon l_menuIcon] [?callback t_itemCallback] [?disable g_disabled]" "Creates a menu item that is used in the argument list to create any menu (except two-dimensional menus and simple menus).")
("hiCreateOptionsForm" "s_formHandle t_formName l_fieldEntries t_help" "Generates an options form.")
("hiCreatePointField" "?name s_fieldName ?value l_currentValue [?help t_fieldHelp] [?prompt t_fieldPrompt] [?defValue l_defaultValue] [?font t_font] [?callback t_callback] [?editable g_editable]" "Creates a point field for a form. This field accepts only a single point as input.")
("hiCreatePointListField" "?name s_fieldName ?value l_currentValue [?help t_fieldHelp] [?prompt t_fieldPrompt] [?defValue l_defaultValue] [?font t_font] [?callback t_callback] [?editable g_editable]" "Creates a point list field for a form. This field accepts only a list of points as input.")
("hiCreatePulldownMenu" "s_menuHandle g_menuTitle l_menuItems" "Creates and returns the SKILL description of a pull-down menu.")
("hiCreateRadioField" "?name s_fieldName ?choices l_radioList [?help t_fieldHelp] [?prompt t_fieldPrompt] [?value t_currentSelection] [?defValue t_defaultSelection] [?itemsPerRow x_itemsPerRow] [?font t_font] [?callback l_radioListCallbacks]" "Creates a radio field for a form. This is a field that contains radio buttons.")
("hiCreateScaleField" "?name s_fieldName [?prompt t_prompt] ?value x_currentValue [?callback t_callback] [?range l_range] [?defValue x_defaultValue] [?help t_fieldHelp ] [?precision x_precision] [?font t_font]" "Creates a scale field for a form. This  field indicates a value in a range and allows the user to input or modify a value from the range.")
("hiCreateSeparatorField" "?name s_fieldName" "Creates a separator field for a form.")
("hiCreateSimpleMenu" "s_menuHandle t_menuTitle l_menuItems l_menuItemCallbacks" "Creates and returns the SKILL description of a simple menu-that is, a single-level menu containing only text menu items, with none of its entries invoking another menu.")
("hiCreateSliderMenuItem" "?name s_itemHandle ?itemText t_menuItemText ?subMenu r_pulldownMenu [?itemIcon l_menuIcon] [?disable g_disabled]" "Creates and returns a slider menu item that is used in the argument list to create a menu (except a simple, fixed, or two-dimensional menu).")
("hiCreateStringField" "?name s_fieldName [?prompt t_fieldPrompt] ?value t_currentValue [?help t_fieldHelp] [?defValue t_defaultValue] [?font t_font] [?callback t_callback] [?format t_fieldFormat] [?editable g_editable]" "Creates a string field for a form.")
("hiCreateToggleField" "?name s_fieldName ?choices l_toggleList [?help t_fieldHelp] [?numSelect x_numSelectable] [?prompt t_fieldPrompt] [?value l_currentValues] [?defValue l_defaultValues] [?itemsPerRow x_itemsPerRow] [?font t_font] [?callback l_toggleListCallbacks]" "Creates a toggle field entry for a form.")
("hiCreateVerticalFixedMenu" "s_menuHandle l_menuItems x_rows x_cols" "Creates and returns an internal data structure that describes a vertical fixed menu object.")
("hiCreateWindow" "g_boxSpec t_widgetType t_applicationType [t_help] [g_scrollbars] [g_form] [l_iconPosition]" "Creates but does not display a window.")
("hiDeiconifyWindow" "w_windowId" "Converts an icon to a window.")
("hiDeleteBannerLabel" "w_windowId x_labelPosition" "Deletes a label in the banner of a window.")
("hiDeleteBannerMenu" "w_windowId x_menuPosition" "Deletes a menu from the banner of a window.")
("hiDeleteBannerMenus" "w_windowId" "Deletes all menus from the banner of a window.")
("hiDeleteField" "r_form s_field" "Deletes one field from a form.")
("hiDeleteFields" "r_form l_fields" "Deletes one or more fields from a form.")
("hiDeleteForm" "r_form" "Deletes a form and any fields it contains.")
("hiDeleteMenu" "r_hiMenu" "Destroys a menu and the menu items in it.")
("hiDeleteMenuItem" "r_hiMenu s_itemHandle" "Deletes a menu item from all instances of a menu.")
("hiDeleteStatusBanner" "w_windowId" "Deletes the status banner of a window.")
("hiDeltaPan" "[w_window] [n_deltax] [n_deltay]" "Pans the view of the design in any direction by specifying the displacements in user units.")
("hiDisableMenuItem" "r_hiMenu s_itemHandle [w_windowId]" "Grays out menu items on pull-down, pop-up, or fixed menus, making them unselectable.")
("hiDisableTailViewfile" "w_windowId" "Turns off the ability to repeatedly read from the end of a file.")
("hiDisableTextSelDefault" "w_windowId" "Disables the default multi-click selection.")
("hiDisplayAppDBox" "?name s_dboxHandle [?dboxBanner t_dboxBanner] [?dboxText t_dboxText] [?callback t_callback] [?dialogType x_dialogType] [?dialogStyle s_dialogStyle] [?buttonLayout s_buttonLayout] [?location l_location] [?help t_help]" "Creates and displays a dialog box.")
("hiDisplayEdgeMenu" "r_hiMenu [l_menuLocation] [x_width] [x_height]" "Displays an Edge(TM)-style pop-up menu or fixed menu, created from the menutrans program.")
("hiDisplayFixedMenu" "r_hiMenu g_menuLocation [x_width] [x_height]" "Displays a fixed menu in the default root window (screen) for the application.")
("hiDisplayForm" "r_form [l_location]" "Displays a standard form. (Does not display options forms.)")
("hiDisplayListBox" "s_listBoxHandle t_listBoxTitle l_listItems t_help" "Creates and displays a list box. Use hiShowListBox instead of this function.")
("hiDisplayMenu" "r_hiMenu [l_position]" "Displays a menu created by hiCreateMenu, hiCreateSimpleMenu, or hiCreate2DMenu.")
("hiDisplayModalDBox" "s_dBoxHandle t_dBoxBannerText t_dBoxMsg t_dBoxHelp t_confirmAction [l_location] [x_dboxType]" "Creates and displays an application modal dialog box.")
("hiDisplayModelessDBox" "s_dBoxHandle t_dBoxBannerText t_dBoxMsg t_dBoxHelp t_confirmAction [l_location] [x_dboxType]" "Creates and displays a modeless dialog box.")
("hiDisplaySysModalDBox" "s_dBoxHandle t_dBoxBannerText t_dBoxMsg t_dBoxHelp t_confirmAction [l_location] [x_dboxType]" "Creates and displays a system modal dialog box.")
("hiDisplayWindow" "w_windowId" "Displays the window created by hiCreateWindow.")
("hiDisplayWindowMenu" "w_windowId" "Displays the menu associated with a window.")
("hiEdgeFixedMenuDone" "r_hiMenu " "Removes an Edge-style fixed menu from the screen.")
("hiEditPropList" "g_object [t_title] [g_modifiable]" "Invokes the property list editor for an object.")
("hiEnableMenuItem" "r_hiMenu s_itemHandle [w_windowId]" "Makes unselectable menu items in pull-down, pop-up, or fixed menus selectable again.")
("hiEnableTailViewfile" "w_windowId" "Turns on the ability to repeatedly read from the end of a file and update the viewfile window.")
("hiEncap" "[g_boxSpec] [t_cmd] [t_title]" "Invokes an encapsulation session by creating and displaying an encapsulation window.")
("hiEndLog" "" "Stops writing the transaction log to the file previously specified by hiStartLog.")
("hiFixedMenuDown" "r_hiMenu " "Removes a fixed menu from the screen. This function should only be used for Edge-style fixed menus.")
("hiFocusToCIW" "[w_windowId]" "Temporarily refocuses the input window to the CIW until a return is entered.")
("hiFocusToCursor" "g_cursorFocus" "Sets the window focus mechanism. If set to t, the current window is set by moving the cursor into a window. If set to nil, you must click in a window to make it current.")
("hiFocusToEncap" "w_encap [w_window]" "Temporarily focuses the keyboard input to an encapsulation window.")
("hiFormCancel" "r_form" "Performs the same action as clicking the Cancel button on the form.")
("hiFormDone" "r_form" "Performs the same action as clicking the OK button on the form.")
("hiFormUnmap" "r_form" "Removes the form from the screen. This function is useful for long callback routines that must do error checking in the beginning.")
("hiGenTextIndex" "w_windowId t_text x_fromIndex" "Returns the character position, x_index, which is the next occurrence of the text string relative to the specified position in the file.")
("hiGetAbsWindowScreenBBox" "w_windowId [g_includeWMOffsets]" "Returns the absolute screen coordinates of a window, assuming 0:0 is the lower-left corner of the screen.")
("hiGetAppType" "w_windowId" "Returns the application type of a window.")
("hiGetAttention" "" "Rings the bell in the keyboard or terminal.")
("hiGetBBoxResource" "t_resourceName [t_resourceClass]" "Returns the bounding box specification defined in the .Xdefaults file for the specified resource.")
("hiGetBannerMenus" "w_windowId" "Creates a list of menus that are in the menu banner of a window.")
("hiGetBindKey" "[t_application_type] [t_key]" "Returns the SKILL command string bound to a key or mouse button for an application.")
("hiGetBindKeyInheritAlias" "t_application_type" "Returns a list of application names that inherit the bindkeys from t_application_type.")
("hiGetBindKeyInheritRoot" "t_application_type" "Returns the application name from which t_application_type inherits bindkeys.")
("hiGetCIWindow" "" "Retrieves the window identity of the CIW.")
("hiGetCommandPoint" "[w_windowId]" "Gets the cursor xy location within a window.")
("hiGetCurrentField" "r_form" "Returns the name of the type-in field that has input focus.")
("hiGetCurrentForm" "" "Returns the last active form, that is, the form that the cursor was last in.")
("hiGetCurrentIndex" "w_windowId" "Returns the current cursor index position of the text relative to 0:0.")
("hiGetCurrentWindow" "" "Returns the identity of the current window.")
("hiGetEncapSkillCmd" "w_window" "Returns the SKILL function associated with a window.")
("hiGetExitStatus" "x_childId" "Returns the exit value of the child process.")
("hiGetFieldInfo" "r_2DFormOr2DMenu s_field" "Returns the dimensions of any form field or two-dimensional menu item.")
("hiGetFont" "t_fontType" "Returns the name of the font associated with the specified font type.")
("hiGetGeometryResource" "t_resourceName [t_resourceClass]" "Gets geometry resources from the X resource database.")
("hiGetIconName" "w_windowId" "Retrieves the icon name of a window.")
("hiGetLayerCyclicValue" "d_libId r_form" "Returns the layer object associated with the current value of the layer cyclic field.")
("hiGetMaxScreenCoords" "" "Retrieves the screen coordinates of the upper-right corner on the display screen. The lower-left corner of the screen always has screen coordinates 0:0.")
("hiGetNumMenus" "w_windowId" "Counts the menus in the menu banner of a window.")
("hiGetPid" "" "Returns the runtime process identification number of the process executing this function.")
("hiGetPoint" "w_windowId" "Gets the current cursor xy location within a window.")
("hiGetPriority" "" "Gets the current default priority.")
("hiGetStringResource" "t_resourceName [t_resourceClass]" "Gets resources from the resource database of the X Window System.")
("hiGetTextCharAtLoc" "w_windowId x_location" "Returns the character of the specified character index location for a window.")
("hiGetTextClass" "w_windowId" "Retrieves a text class.")
("hiGetTextDispLoc" "w_windowId" "Returns the top and bottom character locations of the current visible region of a window.")
("hiGetTextIndexLoc" "w_windowId x_line x_column" "Returns the character index location of a line and column number in a window.")
("hiGetTextLineColumn" "w_windowId x_location" "Returns the line and column number for an index location in a window.")
("hiGetTextSelByLoc" "w_windowId [x_class]" "Returns a list of starting and ending location pairs of all the currently selected text strings in a class.")
("hiGetTextSelection" "w_windowId [x_class]" "Retrieves the currently selected text string in the specified class.")
("hiGetTextSourceLength" "w_windowId" "Returns the length of the source in a window.")
("hiGetTextWidth" "t_fontName t_text" "Returns the width in pixels of a text string in a specified font.")
("hiGetTextWordDelimiter" "w_windowId" "Returns the current settings of the word delimiter list for the window.")
("hiGetUndoLimit" "" "Returns the maximum number of hiUndo commands it is possible to perform.")
("hiGetViewBBox" "[w_window]" "Returns the bounding box displayed in a window.")
("hiGetWMOffsets" "" "Returns a list of the offsets (dimensions) of the window manager border placed around a window.")
("hiGetWidgetType" "w_windowId" "Returns the widget type of a window.")
("hiGetWindowFixedMenu" "[w_window]" "Identifies the fixed menu on a window.")
("hiGetWindowIconifyState" "w_windowId" "Returns the icon position of an iconified window.")
("hiGetWindowList" "" "Returns a list of all window IDs that have been created and not closed.")
("hiGetWindowMenu" "w_windowId" "Returns the symbol of the menu associated with the specified window.")
("hiGetWindowName" "w_windowId" "Gathers the text in the window manager frame of a window.")
("hiGetWindowState" "w_windowId" "Identifies the display state of a window.")
("hiHelp" "t_objType [t_objName] [t_objDetail]" "Constructs a help symbol from the arguments, extracts a help response from the help response file, and evaluates the help response. hiHelp is the main service routine for the online help system.")
("hiHighlightField" "r_form s_field s_highlightType" "Highlights a single type-in field on a form.")
("hiIconifyWindow" "w_windowId" "Converts a window to an icon.")
("hiIgnoreProp" "s_objType t_propName" "Prevents a property from being displayed on the Property List Editor form created from hiEditPropList.")
("hiInheritBindKey" "t_application_type t_from_app_type" "Causes a registered application to inherit bindkeys from another application.")
("hiInsertBannerMenu" "w_windowId g_menu x_menuPosition" "Inserts a menu into the banner of a window.")
("hiInsertMenuItem" "r_hiMenu r_menuItem g_position" "Inserts a menu item into a specified position of all instances of a menu.")
("hiInstantiateForm" "r_form" "Instantiates the C structure of a form from SKILL.")
("hiIs2DMenu" "g_menu" "Determines whether a menu is a valid two-dimensional menu.")
("hiIsActiveChild" "x_childId" "Determines if a child process is alive and active.")
("hiIsAliveChild" "x_childId" "Checks if a child process is still alive.")
("hiIsForm" "g_FormOrMenu" "Checks whether a form or menu is valid.")
("hiIsFormDisplayed" "r_form" "Checks whether a form is displayed.")
("hiIsIcon" "g_icon" "Determines whether an icon is a valid icon.")
("hiIsInstantiated" "r_formOrMenu" "Returns t if a form has been displayed at least once or a menu has been placed in a window.")
("hiIsMenu" "g_menu" "Determines whether a menu is a valid menu.")
("hiIsMenuItemEnabled" "r_hiMenu s_itemHandle [w_windowId]" "Determines whether a menu item is enabled.")
("hiIsMenuSlotFilled" "w_windowId x_position" "Checks a menu position in the banner of a window for the existence of a menu.")
("hiIsWidgetType" "t_widgetType" "Determines if a widget type is valid or not.")
("hiKillAllProcs" "" "Kills every process initiated by the parent through one of the hiBeginProcess class of functions.")
("hiKillChild" "x_childId" "Kills the UNIX process identified by x_childId.")
("hiLayerMatchCyclicStr" "l_choices t_layer" "Returns the cyclic value associated with a layer.")
("hiLayerStringToLPP" "d_libId t_layer" "Returns the layer object in the specified library object associated with the specified layer.")
("hiListBoxCancel" "o_listBox" "Performs the same action as the Cancel button on the list box.")
("hiListBoxDone" "o_listBox" "Performs the same action as the OK button on the list box.")
("hiListView" "[t_viewName] [w_window]" "Lists the saved viewing parameters for a given view, or all saved views if viewName is not specified.")
("hiLowerWindow" "w_windowId" "Lowers a window to the bottom of the list of visible windows.")
("hiMakerHelp" "t_docName t_tagName [quiet]" "Opens a FrameMaker document to the page containing a hypertext tag name.")
("hiMapWindow" "w_windowId" "Displays a window on screen.")
("hiMatchColor" "l_RGBcolor" "Returns the index of the color in the colormap that most closely matches the specified RGB triplet.")
("hiMatchColorByName" "t_colorName" "Returns the index of the color in the colormap that most closely matches the name supplied.")
("hiModalDBoxHelp" "t_helpString [t_dboxName]" "Displays a message in a modal dialog box.")
("hiMoveField" "r_2DFormOr2DMenu s_field l_location" "Moves a field to a new location.")
("hiMoveFixedMenu" "[?window w_window] [?menuSide s_menuSide]" "Moves the fixed menu to the opposite side of the window.")
("hiMoveInsBarToEnd" "r_form s_field" "Places the cursor (insertion point) at the end of a text field, scrolling the field so the cursor is visible.")
("hiMoveWindow" "w_windowId l_point" "Moves the lower left corner of a window to a new screen location.")
("hiNextWinView" "w_window" "Undoes hiPrevWinView.")
("hiOffsetField" "r_2DFormOr2DMenu s_field l_offsets" "Offsets one field from its current position.")
("hiOffsetFields" "r_2DFormOr2DMenu l_fieldsl_offsets" "Offsets several fields from their current positions.")
("hiOpenWindow" "[?bBox l_boxSpec] [?type t_widgetType] [?appType t_applicationType] [?menus l_menus] [?labels l_labels] [?help t_helpString] [?scroll g_scrollbars] [?form g_form] [?closeProc s_closeProc] [?iconPosition l_iconPosition]" "Creates and displays a window.")
("hiPan" "[w_window] [l_point]" "Scrolls a window so that the display is centered on a point.")
("hiPrevWinView" "w_window" "Restores a window to the view displayed before the last zoom or pan command.")
("hiQueryFont" "t_fontName" "Returns the values of the attributes of t_fontName.")
("hiRaiseWindow" "w_windowId" "Raises a window to the top of the list of visible windows.")
("hiReadChild" "x_childId x_timeOut" "Reads data from the child process. Permits you to specify a time, in seconds, beyond which the read operation must not block.")
("hiRedo" "" "Undoes the last hiUndo, assuming no other database modifications have occurred.")
("hiRedraw" "[w_window]" "Redraws the contents of a window.")
("hiRefreshTextWindow" "_window" "Redraws all the selections and refreshes the viewfile window.")
("hiRegCloseProc" "w_windowId s_closeProc" "Registers the procedure to be performed when a window is closed.")
("hiRegisterBindKeyPrefix" "t_application_type [t_widgetType]" "Registers the application bindkey prefix that you do not want or need to register with the Design Editor application.")
("hiRemoveFixedMenu" "[w_window]" "Removes the current fixed menu from a window.")
("hiRemoveTextWordDelimiter" "w_windowId t_delimiters" "Removes characters from the word delimiter list for the window.")
("hiRepeat" "" "Re-executes the last command processed by the CIW.")
("hiReplaceAllBannerMenus" "w_windowId l_menulist" "Replaces all banner menus in a window with new menus.")
("hiReplaceTextWordDelimiter" "w_windowId t_delimiters" "Replaces the original word delimiters for the window with a new set of characters.")
("hiReplayFile" "s_fileName" "Reads in a file of SKILL functions.")
("hiResizeField" "r_2DForm s_field l_resizeDescription" "Changes the width or height of a field or the width of the prompt box.")
("hiResizeWindow" "w_windowId l_bBox" "Resizes a window to the size of a bounding box.")
("hiRestoreView" "t_viewName [w_window]" "Restores a window to the view under the specified viewName.")
("hiSaveAsViewfile" "[w_windowId] [t_fileName]" "Saves the contents of the current window to the specified name. Unlike hiSaveViewfile, does not save the file if the file name already exists. You must specify another file name.")
("hiSaveView" "t_viewName [w_window]" "Saves the current viewing parameters for a window.")
("hiSaveViewfile" "[w_windowId] [t_fileName]" "Saves the contents of a viewfile window to a disk file.")
("hiScrollWindowBottom" "w_windowId" "Scrolls the window to the bottom position of the viewable window.")
("hiScrollWindowDown" "w_windowId" "Scrolls the window down one screenful of text.")
("hiScrollWindowLeft" "w_windowId" "Scrolls the window to the left one screenful of text.")
("hiScrollWindowRight" "w_windowId" "Scrolls the window to the right one screenful of text.")
("hiScrollWindowToCurrentIndex" "w_windowId" "Scrolls the window to the current cursor index position in the viewable window.")
("hiScrollWindowToIndex" "w_windowId x_index" "Scrolls the window to the index position and displays the text.")
("hiScrollWindowTop" "w_windowId" "Scrolls the window to the top position of the viewable window.")
("hiScrollWindowUp" "w_windowId" "Scrolls the window up one screenful of text.")
("hiSelectTextByLoc" "w_windowId l_locationPair [x_class]" "Selects (highlights) a list of strings specified as a list of starting and ending location pairs.")
("hiSetBindKey" "[t_application_type] [t_key] [t_skill_cmd]" "Binds a SKILL command string to a keyboard key or mouse sequence for an application.")
("hiSetCallbackStatus" "r_form g_booleanStatus" "Overrides the removal (unmapping) of a form when the form's OK button is pressed.")
("hiSetCurrentField" "r_form s_fieldName" "Makes the specified type-in field the current field.")
("hiSetCurrentIndex" "w_windowId x_index" "Sets the current cursor index position of the text in a window.")
("hiSetCurrentWindow" "w_windowId" "Sets the current window to be the window you specify.")
("hiSetEncapHistory" "w_window t_msg [g_redraw]" "Copies a message into the next available insertion position in an encapsulation output window.")
("hiSetEncapPrompt" "w_window t_prompt" "Sets the prompt in an encapsulation window.")
("hiSetEncapSkillCmd" "w_windowId t_skillCmd" "Registers the SKILL function that wraps or embraces the input command line entered during the current encapsulation session.")
("hiSetFieldEditable" "r_field g_editable" "Makes a field editable or noneditable in all forms where it appears.")
("hiSetFilter" "[s_filter]" "Sets the output message filter for the CIW with the option specified by s_filter. If no option is specified, a form appears allowing you to specify the display options you want.")
("hiSetFilterOptions" "inputMenuCommands inputPrompts outputProgramResults outputMenuCommands outputUser messageErrors messageWarnings" "Sets the output message filter for the CIW with the specified options.")
("hiSetFixedMenuSize" "w_windowId" "Sets the window position and size of an Edge-style fixed menu.  ")
("hiSetFont" "t_fontType t_fontName" "Sets the font type to use the specified font t_fontName.")
("hiSetFormHighlights" "r_form s_highlightType" "Highlights all type-in fields on a form.")
("hiSetFormPosition" "l_location" "Sets the default initial location for forms displayed without an explicit location argument.")
("hiSetFormToDefaults" "r_form" "Sets each field in the form to its default value.")
("hiSetIconName" "w_windowId t_iconName" "Sets the icon name of a window.")
("hiSetLayerCyclicValue" "d_libId l_lpp r_form" "Sets the current value of the layer cyclic field.")
("hiSetMenuItemCallback" "r_hiMenu s_itemHandle t_callback" "Changes the callback associated with all instances of a specified menu item.")
("hiSetMenuItemText" "r_hiMenu s_itemHandle t_itemText" "Changes the item text associated with all instances of a menu item.")
("hiSetPriority" "x_NiceValue" "Sets the priority value of a child process. Child spawning functions that you call after invoking hiSetPriority carry the same priority.")
("hiSetSkillDesc" "x_SkillCommand x_SkillResult" "Overrides the default descriptors used for communications in child processes using the SKILL language of the parent. Then every SKILLProcess invoked uses the CmdSkill and ResSkill descriptor values to communicate to the parent.")
("hiSetTextClass" "w_windowId x_class" "Sets the active selection (highlight) text class in a window.")
("hiSetTextHighlightColor" "x_class l_foreground l_background" "Sets the foreground and background highlight colors of a class to the specified RGB values.")
("hiSetTextSelectAll" "w_windowId t_text [x_class]" "Selects (highlights) all occurrences of a string. Afterwards, the cursor position is reset to the top of the file.")
("hiSetTextSelection" "w_windowId t_text [x_class]" "Selects (highlights) the next occurrence of a string.")
("hiSetUndoLimit" "n_undoLimit" "Sets the maximum number of hiUndo commands that can be performed in sequence.")
("hiSetViewfile" "w_windowId t_fileName" "Reads in the file from disk and displays its contents in the viewfile window.")
("hiSetWindowAtts" "[?window w_windowId] [?appType t_applicationType] [?help t_help] [?scroll g_scrollbars]" "Changes the application type, help string, or scrollbar attributes of a window.")
("hiSetWindowIcon" "w_windowId l_icon" "Sets the icon of a window.")
("hiSetWindowMenu" "g_menu w_windowId" "Associates a menu with a window.")
("hiSetWindowName" "w_windowId t_label" "Sets the text in the window manager frame of a window.")
("hiShowBindKeys" "[g_appTypeOrWindow]" "Displays the bindkeys for an application or window.")
("hiShowBindKeysByAppType" "[t_application_type] [t_widgetType" "Displays the bindkeys for an application.")
("hiShowBindKeysByWindow" "[w_window]" "Displays the bindkeys for a window.")
("hiShowListBox" "?name s_listBoxHandle ?choices lt_listItems ?callback s_callback [?title t_listBoxTitle] [?multipleSelect g_multiSelect] [?value lt_selectedItem] [?appData g_appData] [?applyButton g_applyButton]" "Creates and displays a list box.")
("hiSkillProcess" "t_command [t_hostName] [t_ioHandler] [t_errHandler] [t_postFunc] [t_logFile]" "Invokes a UNIX process to execute SKILL functions.")
("hiSleep" "x_time" "Causes the parent process to sleep for the given number of seconds.")
("hiSoftInterrupt" "x_childId" "Equivalent to the UNIX kill -2 command. If the child process is active it is sent a soft interrupt. The child is responsible for catching the signal.")
("hiStartGenTextIndex" "w_windowId t_text" "Searches for a text string from the top of the file and returns the first character position, x_index, of the matching text.")
("hiStartLog" "t_filename" "Writes a transaction log to a file.")
("hiStopChild" "x_childId" "Causes the child process to suspend its execution. Is equivalent to sending a STOP signal through the UNIX kill command.")
("hiStoreFormLocation" "s_formName l_location" "Stores a form's location coordinates so that the form can be restored to the same position in the next session.")
("hiStringToIcon" "a_colorArray t_iconString x_width x_height" "Returns an internal icon description that can be used in calls to other functions.")
("hiSwitchWindowType" "w_windowId t_widgetType t_appType t_help [g_scroll]" "Switches the widget type of a window from text to graphics or from graphics to text.")
("hiTextDisplayString" "w_windowId t_text g_erase [g_dontScrollTop]" "Displays a text string in a window.")
("hiToggleEnterForm" "[g_form]" "Displays or removes the options form of the enterfunction in the current window.")
("hiUndo" "" "Undoes the last user command that modified the database and that has not been undone by a previous hiUndo.")
("hiUnmapWindow" "w_windowId" "Removes a window from the screen without closing or destroying it.")
("hiUnregCloseProc" "w_windowId s_closeProc" "Unregisters the closing procedure for the specified window.")
("hiUnselectText" "w_windowId t_text [x_class]" "Deselects (unhighlights) the next occurrence of selected text in the viewfile.")
("hiUnselectTextAll" "w_windowId [t_text] [x_class]" "Deselects (unhighlights) all occurrences of the selected text that match the pattern t_text and class x_class.")
("hiUnselectTextByLoc" "w_windowId l_locationPair [x_class]" "Deselects (unhighlights) a list of selected text specified as a list of starting and ending location pairs in a window.")
("hiUnselectTextClass" "w_windowId x_class" "Deselects (unhighlights) all occurrences of text belonging to the specified class.")
("hiUpdateTextSelectionColors" "w_windowId" "Redraws all the selections visible in the window and updates any colors previously reset with hiSetTextHighlightColor.")
("hiVectorPan" "[w_window] [l_refPt] [l_destPt]" "Scrolls the view of the design in any direction by specifying two points in user units.")
("hiWait" "x_childId" "Causes the parent process to suspend until the child process terminates.")
("hiWaitForChild" "x_childId" "Causes the parent process to suspend until the child process is alive ready for communication.")
("hiWriteChild" "x_childId t_data" "Writes data to the child's stdin port.")
("hiZoomAbsoluteScale" "[w_window] [n_scale]" "Zooms in or out with an absolute scale.")
("hiZoomIn" "[w_window] [l_bBox]" "Zooms in to a design.")
("hiZoomOut" "[w_window] [l_bBox]" "Zooms out of a design.")
("hiZoomRelativeScale" "[w_window] [n_scale]" "Zooms in or out with a scale relative to the current window.")
("hihelpInit" "" "Sets global SKILL variables for the help directory and backup help directory.")
))
