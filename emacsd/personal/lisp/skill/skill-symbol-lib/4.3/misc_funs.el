(put 'misc_funs 'symbol-type "miscellaneous API fun")
(setq misc_funs '(
("appTrigger" "l_args")
("dataTrigger" "l_args")
("enableTrigger" "[l_args]")
("menuTrigger" "l_args")
("postInstallTrigger" "l_args")
("probeTrigger" "w_window s_action [w_source]")
("userAppTrigger" "l_args")
("userMenuTrigger" "l_args")
("userPostInstallTrigger" "l_args")
("MIFFile" "f_version [t_comment]" "Generates the SMIFT representation of the MIF MIFFile statement.")
("addPoint" "l_point" "Adds a point to the enterfunction in the current window.")
("appTrigger" "l_args" "Sets up the banner (except for menus), installs the window pop-up menu, initializes the application in other ways, and manages the application context.")
("applyEnterFun" "" "Calls doneProc, passes it the points you entered, resets the enterfunction, and calls initProc.")
("cancelEnterFun" "[g_form]" "Cancels the enterfunction in the current window.")
("changeEnterFun" "s_enterFun [?prompts l_promptList] [?points l_pointList] [?wantPoints x_pointLimit] [?form s_form] [?addPointProc t_addProcName] [?delPointProc t_delProcName] [?initProc t_initProcName] [?doneProc t_doneProcName] [?formProc t_formProcName] [?pathStyle t_pathStyle] [?pathWidth f_pathWidth] [?beginExtent f_beginExtent] [?endExtent f_endExtent] [?dontDraw g_dontDraw] [?alwaysMap g_alwaysMap] [?acceptString g_acceptString] [?acceptNumber g_acceptNumber] [?noInfix g_noInfix]" "Changes the current enterfunction to another one.")
("closeMIFin" "" "Closes the MIF input file opened by openMIFin.")
("closeMIFout" "" "Closes the MIF output file opened by openMIFout.")
("commentMIF" "t_comment1 t_comment2 ... t_commentN" "Writes a series of one-line MIF comments to the current MIF output file.")
("dagAddActionToObject" "l_actionList g_dagObject" "Lets you invoke your own function from a pop-up menu.")
("dataTrigger" "l_args" "Opens a design and returns an identifier for the open file.")
("deletePoint" "" "Deletes a point from the enterfunction in the current window.")
("drawEnterFun" "" "Redraws rubberbanding shapes. Called when an enterfunction is active.")
("exit" "" "Exits SKILL, and therefore the CIW and the Cadence software, whether in interactive or batch mode.")
("finishEnterFun" "[g_form]" "Completes an enterfunction if possible. (Some commands cannot be finished until you enter all the required points.)")
("getMIFFile" "t_fileName" "Opens a MIF file for input and reads the file.")
("icHierSave" "d_cv")
("icSetPRengine" "d_cv t_engine")
("libMonGetCheckTimePeriod" "" "Returns the library monitor check period.")
("libMonSetCheckTimePeriod" "x_interval" "Sets the library monitor check period.")
("libMonSetHoldWriteLock" "t_flag" "Sets the library lock holding flag.")
("menuTrigger" "l_args" "Returns a list of menus to install.")
("openMIFin" "t_fileName" "Opens a MIF file for input.")
("openMIFout" "t_fileName" "Opens a MIF file for output.")
("postInstallTrigger" "l_args" "Enables applications to do processing that cannot be done until last, such as adding items to menus. Called after all other processing is done.")
("printMIF" "l_statement1 l_statement2 ... l_statementN" "Writes MIF statements, represented in their internal SMIFT list form, to the open output file.")
("probeTrigger" "w_window s_action [w_source]" "Keeps the probing mechanism's data structures consistent without requiring each application to call the probing mechanism separately.")
("putMIFFile" "l_groupOfStatements t_fileName" "Opens a file for output and writes out MIF statements whose SMIFT equivalents are in the given list.")
("readMIF" "" "Reads the next MIF statement from the open MIF file.")
("setPrompts" "s_prompt1 s_prompt2" "Sets the prompt text string for the CIW.")
("startLibMonitor" "" "Starts libMonitor, the library integrity monitoring process.")
("startLibMonitor" "")
("undrawEnterFun" "" "Undraws any rubberbanding shapes. Called when an enterfunction is active. If you enter data in the window, rubberbanding resumes.")
("userAppTrigger" "l_args" "Allows clients to subclass application triggers and thus add a context to the one already managed by the application.")
("userMenuTrigger" "l_args" "Allows the user to attach menus to an application.")
("userPostInstallTrigger" "l_args" "Serves the same function as postInstallTrigger, but is intended for use only by the customer. Called immediately after the postInstallTrigger.")
("view" "t_file [g_boxSpec] [g_title] [g_autoUpdate]" "Creates a viewfile window, inserts the banner menu, sets the window and icon name, and displays a file in the window.")
("window" "w_windowNumber" "Retrieves the window identity of a window number.")
("windowp" "g_object" "Checks whether the specified object is a valid, opened window.")
))
